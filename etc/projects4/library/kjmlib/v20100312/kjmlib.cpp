//---------------------------------------------------------------------
// 何度も作ってる codesnipet
//---------------------------------------------------------------------
#include "kjmlib.h"


//---------------------------------------------------------------------
// 安全な sprintf 
//
// [引数]
// 一番目の引数が、vector<char>への参照になっている以外、
// sprintf関数と同じです。
//---------------------------------------------------------------------
int sprintf_vec(std::vector<char>& buf, const char* format, ...) {
	va_list marker;

	// バッファを指定されていない時、256バイト割り当てておく
	if (buf.size() == 0) {
		buf.resize(256);
	}

	va_start(marker, format);
	while (1) {

		// vsnprintf で文字列を作成。
		// 不十分なバッファ上にデータを作成している間、ループを繰り返す。
		int n = _vsnprintf(buf.begin(), buf.size(), format, marker);
		if (n != -1 && n != buf.size()) {
			break;
		}

		buf.resize(buf.size() + 256);
	}
	va_end(marker);

	return buf.size();
}

//---------------------------------------------------------------------
// 時間クラス
//---------------------------------------------------------------------

//---------------------------------------------------------------------
// デフォルトコンストラクタ
//---------------------------------------------------------------------
kjm::time::time() {
	memset(&m_ft, 0, sizeof(m_ft));
}

//---------------------------------------------------------------------
// デストラクタ
//---------------------------------------------------------------------
kjm::time::~time() {
}

//---------------------------------------------------------------------
// 文字列を単純な YYYY/MM/DD HH:MM:SS 文字列に変換します。
//---------------------------------------------------------------------
_tstring kjm::time::to_string() {
	std::vector<TCHAR> temp_v(80);
	SYSTEMTIME st;

	FileTimeToSystemTime(&m_ft, &st);
	sprintf_vec(temp_v, _T("%04d/%02d/%02d %02d:%02d:%02d"),
		st.wYear, st.wMonth, st.wDay, st.wHour, st.wMinute, st.wSecond);

	return temp_v.begin();
}

//---------------------------------------------------------------------
// GetLocalTime
// 現在のローカル日時を取得します。
//---------------------------------------------------------------------
kjm::time kjm::time::get_local_time() {
	kjm::time t;
	SYSTEMTIME st;

	::GetLocalTime(&st);
	::SystemTimeToFileTime(&st, &t.m_ft);

	return t;
}
