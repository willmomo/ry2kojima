//---------------------------------------------------------------------
// 自分専用ライブラリ
//---------------------------------------------------------------------
#pragma once

#include <windows.h>
#include <windowsx.h>
#include <tchar.h>
#include <shlwapi.h>
#pragma comment(lib, "shlwapi.lib")
#include <string>
#include <vector>

//---------------------------------------------------------------------
// マクロ
//---------------------------------------------------------------------
// 配列の要素数を取得
#define countof(A)	(sizeof((A))/sizeof((A)[0]))


namespace kjm {
	//---------------------------------------------------------------------
	// 型
	//---------------------------------------------------------------------
	// MBCS と UNICODE 自動選択の string
	typedef std::basic_string<TCHAR>	_tstring;

	// MBCS と UNICODE 自動選択の 文字配列
	typedef std::vector<TCHAR>	_tarray;

	//-----------------------------------------------------------------
	// ユーティリティクラス
	//-----------------------------------------------------------------
	class util {
	public:
		//-------------------------------------------------------------
		// GetModuleFileName 相当
		//-------------------------------------------------------------
		static _tstring get_module_file_name(HMODULE hModule = NULL);

	private:
		util() {};
		~util() {};
	};

	//-----------------------------------------------------------------
	// Path関係のユーティリティクラス
	//-----------------------------------------------------------------
	class path {
	public:
		//-------------------------------------------------------------
		// PathAppend 相当
		//-------------------------------------------------------------
		static _tstring append(const _tstring& src, const _tstring& more);

		//-------------------------------------------------------------
		// PathRemoveFileSpec 相当
		//-------------------------------------------------------------
		static _tstring remove_file_spec(const _tstring& src);

		//-------------------------------------------------------------
		// ファイル名部分を変更する。remove_file_spec + append 処理。
		//-------------------------------------------------------------
		static _tstring rename_file_spec(const _tstring& src, const _tstring& newName);

	private:
		path() {};
		~path() {};
	};
};
